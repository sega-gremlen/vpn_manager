"""Init

Revision ID: d9e3572fdb59
Revises: 
Create Date: 2024-09-12 23:03:43.689753

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd9e3572fdb59'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_types',
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('xray_uuid', sa.String(), nullable=False),
    sa.Column('trial_wasted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('payment_requests',
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('stop_at', sa.DateTime(), nullable=False),
    sa.Column('periods', sa.Integer(), nullable=False),
    sa.Column('subscription_type_id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('redirect_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_type_id'], ['subscription_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_type_id', sa.Integer(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('stop', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_type_id'], ['subscription_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('notification_type', sa.String(), nullable=False),
    sa.Column('operation_id', sa.String(), nullable=False),
    sa.Column('operation_label', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('withdraw_amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.Integer(), nullable=False),
    sa.Column('api_datetime', sa.DateTime(), nullable=False),
    sa.Column('sender', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('sha1_hash', sa.String(), nullable=False),
    sa.Column('unaccepted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['label'], ['payment_requests.label'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.Integer(), sa.Identity(always=True), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('stop', sa.DateTime(), nullable=False),
    sa.Column('current_value', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('periods')
    op.drop_table('payments')
    op.drop_table('subscriptions')
    op.drop_table('payment_requests')
    op.drop_table('users')
    op.drop_table('subscription_types')
    # ### end Alembic commands ###
