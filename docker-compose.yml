version: '3.7'
services:
  db:
    image: postgres:latest
    container_name: vpn_manager_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_db:/var/lib/postgresql/data
    ports:
      - "37779:5432"
    restart: always

  fastapi:
    image: fastapi_image
    build:
      context: .
    container_name: fastapi_container_name
    env_file:
      - .env
    working_dir: /vpn_manager
    command: "gunicorn app.notification_api:app --workers 2 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000 --log-level debug --access-logfile - --error-logfile -"
    ports:
      - "37777:8000"
    restart: always

  panel:
    image: ghcr.io/mhsanaei/3x-ui:latest
    container_name: 3x-ui
    volumes:
      - ./panel_db:/etc/x-ui/
    environment:
      XRAY_VMESS_AEAD_FORCED: "false"
      PANEL_USERNAME: ${PANEL_USERNAME}
      PANEL_PASSWORD: ${PANEL_PASSWORD}
    tty: true
#    network_mode: host
    restart: always
    ports:
      - "37778:2053"
      - "37465:37465"
      - "37466:37466"
    entrypoint: sh -c "exec /app/x-ui"


  vpn_manager:
    image: vpn_manager_image
    build:
      context: .
    container_name: vpn_manager_app
    env_file:
      - .env
    environment:
      PANEL_HOST: ${PANEL_HOST}
      PANEL_PORT: ${PANEL_PORT}
    depends_on:
      - db
      - panel
    working_dir: /vpn_manager
    command: "bash docker_commands.sh"
    restart: always